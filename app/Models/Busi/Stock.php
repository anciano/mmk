<?php

namespace App\Models\Busi;

use Illuminate\Database\Eloquent\Model;
use DB;

/**
 * 门店库存
 * Class Stock
 * @package  App\Models\Busi
 *
 * @author  xrs
 * @SWG\Model(id="Stock")
 * @SWG\Property(name="fbase_eqty", type="number", description="库存基本单位数量（瓶）")
 * @SWG\Property(name="fcreate_date", type="string", description="创建时间")
 * @SWG\Property(name="fcreator_id", type="integer", description="创建人")
 * @SWG\Property(name="fdocument_status", type="string", description="审核状态")
 * @SWG\Property(name="feqty", type="number", description="瓶数量")
 * @SWG\Property(name="fhqty", type="number", description="箱数量")
 * @SWG\Property(name="flog_id", type="integer", description="拜访执行明细visit_todo_calendar id")
 * @SWG\Property(name="fmaterial_id", type="integer", description="物料内码id")
 * @SWG\Property(name="fmodify_date", type="string", description="修改时间")
 * @SWG\Property(name="fmodify_id", type="integer", description="修改人")
 * @SWG\Property(name="fold_eqty", type="number", description="上次盘点库存基本单位数量(瓶)")
 * @SWG\Property(name="fsale_hqty", type="number", description="建议销售数量(箱)")
 * @SWG\Property(name="fstore_id", type="integer", description="门店id")
 * @SWG\Property(name="ftime", type="string", description="盘点时间")
 * @SWG\Property(name="id", type="integer", description="")
  */
class Stock extends BaseModel
{
	//
	protected $table = 'st_stocks';
	protected $guarded = ['id'];
	//protected $relations

	public function store(){
	    return $this->hasOne(Store::class,'id','fstore_id');
    }

    public function material(){
        return $this->hasOne(Material::class,'id','fmaterial_id');
    }

	protected static function boot()
	{
		parent::boot(); // TODO: Change the autogenerated stub
		static::creating(function ($model){
			$model->ftime = date('Y-m-d H:i:s');
		});
//		static::created(function ($model){
//			 //创建订单
//			DB::transaction(function () use($model) {
//				$order = SaleOrder::where('flog_id', $model->flog_id)
//					->where('fstore_id', $model->fstore_id)
//					->first();
//				if (empty($order)) {
//					$store = Store::find($model->fstore_id);
//					$order = SaleOrder::create([
//						'fstore_id' => $model->fstore_id,
//						'flog_id' => $model->flog_id,
//						'fbill_no' => $store->fnumber . date('Ymd'),
//						'fdate' => date('Ymd'),
//						'femp_id' => $model->femp_id,
//						'fcust_id' => $store->fcust_id,
//					]);
//				}
//				SaleOrderItem::create([
//					'fstock_id' => $model->id,
//					'fsale_order_id' => $order->id,
//					'fmaterial_id' => $model->fmaterial_id,
//					'fsale_unit' => $model->material->fsale_unit,
//					'fbase_unit' => $model->material->fbase_unit,
//					'fqty' => $model->fsale_hqty,
//					'fbase_qty' => $model->fsale_hqty * $model->material->fratio,
//				]);
//			});
//		});
//		static::deleted(function ($model){
//			//删除订单item
//			$orderItems = SaleOrderItem::where('fstock_id', $model->id)->get();
//			foreach ($orderItems as $item)
//				$item->delete();
//		});
//		static::updated(function ($model){
//			//更新订单
//			$orderItem = SaleOrderItem::where('fstock_id', $model->id)->first();
//			if(!empty($orderItem) && $orderItem->fqty != $model->fsale_hqty){
//				$orderItem->fqty = $model->fsale_hqty;
//				$orderItem->fbase_qty = $model->fsale_hqty * $model->material->fratio;
//				$orderItem->save();
//			}
//		});
	}
}
