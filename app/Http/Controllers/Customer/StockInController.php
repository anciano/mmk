<?php
namespace App\Http\Controllers\Customer;

use App\Models\Busi\Customer;
use App\Models\Busi\Material;
use App\Models\Busi\CustStockInItem;
use App\Models\Busi\Store;
use Illuminate\Http\Request;
use App\Http\Controllers\Admin\AdminController;
use App\Models\Busi\CustStockIn;
use Illuminate\Support\Facades\Auth;

class StockInController extends BaseController
{
	public function newEntity(array $attributes = [])
	{
		// TODO: Implement newEntity() method.
		return new CustStockIn($attributes);
	}

	/**
	* Display a listing of the resource.
	*
	* @return  \Illuminate\Http\Response
	*/
	public function index()
	{
		$customer = Auth::user()->reference;
		$customers[] = ['label' => $customer->fname, 'value' => $customer->id];

        $materials = Material::all()->map(function ($item){
            return ['label' => $item->fname, 'value' => $item->id];
        });
		return view('customer.stock-in.index',compact('customers','materials'));
	}

	/**
	* Show the form for creating a new resource.
	*
	* @return  \Illuminate\Http\Response
	*/
	public function create()
	{
		return view('customer.stock-in.create');
	}

	/**
	* Display the specified resource.
	*
	* @param    int  $id
	* @return  \Illuminate\Http\Response
	*/
	public function edit($id)
	{
		$entity = CustStockIn::find($id);
		return view('customer.stock-in.edit', ['entity' => $entity]);
	}

	/**
	* Display the specified resource.
	*
	* @param    int  $id
	* @return  \Illuminate\Http\Response
	*/
	public function show($id)
	{
		//
	}

	/**
	 * @param  Request $request
	 * @param  array $searchCols
	 * @param  array $with
	 * @param  null $conditionCall
	 * @param bool $all_columns
	 * @return \Illuminate\Http\JsonResponse
	 */
	public function pagination(Request $request, $searchCols = [], $with=[], $conditionCall = null, $all_columns = false){
		$searchCols = ["fbill_no","fdocument_status","fsend_status"];
        $with = ['customer','user'];
		return parent::pagination($request, $searchCols, $with, $conditionCall, true);
	}

	public function entityQuery()
	{
		$customer = Auth::user()->reference;
		return $customer->stock_ins(); //parent::entityQuery(); // TODO: Change the autogenerated stub
	}

    public function store(Request $request, $extraFields=[])
    {
        $data = $request->input('data', []);
        $props = current($data);

        $extraFields=[
            'fcust_id' => Auth::user()->reference->id,
            'fuser_id' => Auth::user()->reference->id,
            //'fbill_no' => Store::find($props['fstore_id'])->fnumber.date("Ymd")
        ];
        return parent::store($request,$extraFields);
    }

    public function check(Request $request)
    {
        $json = parent::check($request);
        $data = json_decode($json->content())->data; // TODO: Change the autogenerated stub

        foreach ($data as $d){
            CustStockInItem::query()->where('fstock_in_id',$d->id)->update([
                'fdocument_status' => "C"
            ]);
        }

        return response()->json([
            'code' => 200,
            'result' => '到货确认成功！'
        ]);

    }

    public function unCheck(Request $request)
    {
        $json = parent::unCheck($request);
        $data = json_decode($json->content())->data; // TODO: Change the autogenerated stub

        foreach ($data as $d){
            CustStockInItem::query()->where('fstock_in_id',$d->id)->update([
                'fdocument_status' => "A"
            ]);
        }

        return response()->json([
            'code' => 500,
            'result' => '到货修改成功！'
        ]);

    }

}
