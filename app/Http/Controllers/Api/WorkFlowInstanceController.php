<?php

namespace App\Http\Controllers\Api;

use App\Models\Busi\WorkFlowInstanceVariable;
use App\Models\Busi\WorkFlowVariable;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Http\Request;
use App\Http\Controllers\Api\ApiController;
use App\Models\Busi\WorkFlowInstance;

class WorkFlowInstanceController extends ApiController
{
	//
	public function newEntity(array $attributes = [])
	{
		// TODO: Implement newEntity() method.
		return new WorkFlowInstance($attributes);
	}

	public function fillQueryForIndex(Request $request, Builder &$query)
	{
		$query->with(['variables', 'workflow', 'sponsor']);
		parent::fillQueryForIndex($request, $query); // TODO: Change the autogenerated stub
	}

	public function show($id)
	{
		//return parent::show($id); // TODO: Change the autogenerated stub
		if ($id == 0) {
			return response('{}', 404);
		} else {
			$entity = WorkFlowInstance::with(['variables', 'sponsor','workflow'])->find($id);
			//$entity = $this->newEntity()->newQuery()->find($id);
			// var_dump($entity);
			return response($entity, 200);
		}
	}

	/**
	 * 门店是否在变更审批中
	 * @param Request $request
	 * @return \Illuminate\Contracts\Routing\ResponseFactory|\Symfony\Component\HttpFoundation\Response
	 */
	public function storeValid(Request $request){
		$store_id = $request->input('store_id');
	    $count = WorkFlowInstanceVariable::query()
			->join('work_flow_instances', 'work_flow_instances.id', '=', 'work_flow_instance_variables.work_flow_instance_id')
			->where('work_flow_instances.status', 0)
			->where('work_flow_instance_variables.name', 'store_id')
			->where('work_flow_instance_variables.value', $store_id)
			->count();
		return response(['valid' => $count > 0], 200);
	}

}